{"version":3,"sources":["helpers.ts","models/category.ts","store.ts","firebase-config.ts","models/product.ts","components/products-page/products-search-input.tsx","hooks/use-window-size.ts","components/products-page/category-row.tsx","components/products-page/order-actions.tsx","components/products-page/product-row.tsx","components/products-page/products-table.tsx","components/products-page/menu.tsx","components/products-page/index.tsx","hooks/use-search.ts","components/sign-in-page/index.tsx","components/order-page/index.tsx","components/order-history-page/index.tsx","index.tsx"],"names":["groupBy","arr","getKey","Object","entries","reduce","result","item","key","push","Category","name","products","names","this","split","type","value","UPDATE_ORDER","RESET_ORDER","SET_DATA","initialState","order","store","createStore","state","action","product","amount","id","fuse","Fuse","keys","categories","p","category","sort","a","b","localeCompare","map","updatedAt","serializedOrder","localStorage","getItem","JSON","parse","undefined","loadState","devToolsEnhancer","subscribe","setItem","stringify","getState","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","getXMLTagContent","xml","tagName","elems","getElementsByTagName","length","textContent","Product","price","count","ProductsSearchInput","onSearch","useState","query","setQuery","useEffect","timeout","setTimeout","clearTimeout","Input","fluid","icon","iconPosition","onChange","e","target","Button","basic","onClick","memo","useWindowSize","width","document","documentElement","clientWidth","height","clientHeight","windowSize","setWindowSize","handleResize","window","addEventListener","removeEventListener","CategoryRow","style","className","Breadcrumb","sections","content","connect","props","dispatch","setOrderAmount","setValue","size","compact","onBlur","parseInt","ProductRow","isLoggedIn","Label","color","Icon","MemoisedList","windowWidth","items","itemCount","itemSize","itemKey","index","overscanCount","areEqual","ProductsTable","filteredProducts","maxHeight","setMaxHeight","useMemo","toItem","flatMap","c","present","concat","Segment","attached","MenuComponent","hasOrder","Menu","secondary","Item","signOut","as","to","load","fetch","response","DOMParser","text","parseFromString","Array","from","getUpdatedAt","json","Date","commit","author","date","setData","useAuthState","user","isFirebaseLoading","isDataLoading","setIsDataLoading","filtered","setFiltered","useCallback","search","r","useSearch","runQuery","Promise","all","then","loading","values","filter","x","toLocaleDateString","toLocaleTimeString","SignInPage","email","setEmail","password","setPassword","isLoading","setIsLoading","error","setError","handleSignIn","signInWithEmailAndPassword","message","Grid","verticalAlign","textAlign","Column","Message","Form","onSubmit","stacked","placeholder","resetOrder","history","useHistory","handleConfirmOrder","collection","add","uid","Group","negative","positive","where","orderBy","get","docs","toDate","OrderHistoryPage","records","setRecords","catch","info","Table","unstackable","Header","Row","HeaderCell","colSpan","toString","Body","Cell","ReactDOM","render","StrictMode","exact","path","component","OrderPage","ProductsPage","getElementById"],"mappings":"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","file":"static/js/main.e4bef416.chunk.js","sourcesContent":["export function groupBy<T>(arr: T[], getKey: (item: T) => string): [string, T[]][] {\n  return Object.entries(arr.reduce((result: { [key: string]: T[] }, item) => {\n    const key = getKey(item)\n\n    result[key] = result[key] || []\n\n    result[key].push(item)\n\n    return result\n  }, {}))\n}\n","import Product from './product'\nimport ListItem from './list-item'\n\nclass Category {\n  readonly key: string\n  readonly names: string[]\n  readonly products: Product[]\n\n  constructor(name: string, products: Product[]) {\n    this.key = name\n    this.names = name.split('/')\n    this.products = products\n  }\n\n  present() {\n    return this.key !== ''\n  }\n\n  toItem(): ListItem {\n    return { type: 'category', value: this }\n  }\n}\n\nexport default Category\n","import { Action, createStore } from 'redux'\nimport { devToolsEnhancer } from 'redux-devtools-extension'\nimport Fuse from 'fuse.js'\n\nimport { groupBy } from './helpers'\nimport Order from './models/order'\nimport Product from './models/product'\nimport Category from './models/category'\n\nexport const UPDATE_ORDER = 'UPDATE_ORDER'\n\nexport interface UpdateOrderAction extends Action<typeof UPDATE_ORDER> {\n  product: Product\n  amount: number\n}\n\nexport const RESET_ORDER = 'RESET_ORDER'\n\nexport interface ResetOrderAction extends Action<typeof RESET_ORDER> { }\n\nexport const SET_DATA = 'SET_DATA'\n\nexport interface SetDataAction extends Action<typeof SET_DATA> {\n  products: Product[]\n  updatedAt: Date\n}\n\ntype AppAction = UpdateOrderAction | ResetOrderAction | SetDataAction\n\nexport interface AppState {\n  order: Order\n  fuse?: Fuse<Product>\n  categories?: Category[]\n  updatedAt?: Date\n}\n\nconst initialState: AppState = {\n  order: {},\n}\n\nconst reducer = (state = initialState, action: AppAction) : AppState => {\n  switch (action.type) {\n    case UPDATE_ORDER:\n      const { product, amount } = action as UpdateOrderAction\n\n      return { ...state, order: { ...state.order, [product.id]: { product, amount } } }\n\n    case RESET_ORDER:\n      return { ...state, order: {} }\n\n    case SET_DATA:\n      const fuse = new Fuse(action.products, { keys: ['name'] })\n\n      const categories = groupBy(action.products, p => p.category)\n        .sort(([a], [b]) => a.localeCompare(b))\n        .map(([name, products]) => new Category(name, products))\n\n      return { ...state, fuse, categories, updatedAt: action.updatedAt }\n\n    default:\n      return state\n  }\n}\n\nconst loadState = (): AppState | undefined => {\n  try {\n    const serializedOrder = localStorage.getItem('order')\n\n    return serializedOrder ? { order: JSON.parse(serializedOrder) as Order } : undefined\n  } catch {\n    return undefined\n  }\n}\n\nconst store = createStore(reducer, loadState(), devToolsEnhancer({}))\n\nstore.subscribe(() => {\n  try {\n    localStorage.setItem('order', JSON.stringify(store.getState().order))\n  } catch {\n  }\n})\n\nexport default store\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyAP3J-XdlTdcxSNxWqq-s_oFjDrKRQiZWo',\n  authDomain: 'kivi-pu.firebaseapp.com',\n  projectId: 'kivi-pu',\n  storageBucket: 'kivi-pu.appspot.com',\n  messagingSenderId: '548489968120',\n  appId: '1:548489968120:web:26993108b29017326bbe0d'\n})\n\nexport const auth = firebase.auth()\n\nexport const firestore = firebase.firestore()\n","import ListItem from './list-item'\n\nfunction getXMLTagContent(xml: Element, tagName: string): string {\n  const elems = xml.getElementsByTagName(tagName)\n\n  return (elems.length >= 1 && elems[0].textContent) || ''\n}\n\nclass Product {\n  readonly id: string\n  readonly name: string\n  readonly price: string\n  readonly count: string\n  readonly category: string\n\n  constructor(xml: Element) {\n    this.id = getXMLTagContent(xml, 'code')\n    this.name = getXMLTagContent(xml, 'name')\n    this.price = getXMLTagContent(xml, 'price')\n    this.count = getXMLTagContent(xml, 'count')\n    this.category = getXMLTagContent(xml, 'category')\n  }\n\n  toItem(): ListItem {\n    return { type: 'product', value: this }\n  }\n\n  get key() {\n    return this.id\n  }\n}\n\nexport default Product\n","import { useState, useEffect, memo } from 'react'\nimport { Input, Button } from 'semantic-ui-react'\n\ninterface ProductsSearchInputProps {\n  onSearch: (query: string) => void\n}\n\nconst ProductsSearchInput = ({ onSearch }: ProductsSearchInputProps) => {\n  const [query, setQuery] = useState<string>('')\n\n  useEffect(() => {\n    if (query === '') {\n      onSearch(query)\n    } else {\n      const timeout = setTimeout(() => onSearch(query), 500)\n\n      return () => clearTimeout(timeout)\n    }\n  }, [query])\n\n  return (\n    <Input\n      fluid\n      icon='search'\n      iconPosition='left'\n      value={query}\n      onChange={e => setQuery(e.target.value)}\n      action={<Button basic icon='delete' onClick={() => setQuery('')} />}\n    />\n  )\n}\n\nexport default memo(ProductsSearchInput)\n","import { useState, useEffect } from 'react'\n\nexport default function useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: document.documentElement.clientWidth,\n    height: document.documentElement.clientHeight,\n  })\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: document.documentElement.clientWidth,\n        height: document.documentElement.clientHeight,\n      })\n    }\n\n    window.addEventListener('resize', handleResize)\n\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowSize\n}\n","import { CSSProperties } from 'react'\nimport { Breadcrumb, List } from 'semantic-ui-react'\nimport Category from '../../models/category'\n\ninterface CategoryRowProps {\n  style?: CSSProperties\n  category: Category\n}\n\nconst CategoryRow = ({ style, category: { names } }: CategoryRowProps) => <>\n  <div className='list-item category' style={style}>\n    <Breadcrumb icon='right angle' sections={names.map(name => ({ key: name, content: name }))} />\n  </div>\n</>\n\nexport default CategoryRow\n","import { useState } from 'react'\nimport { Button, Input } from 'semantic-ui-react'\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux'\n\nimport { AppState, UpdateOrderAction, UPDATE_ORDER } from '../../store'\nimport Product from '../../models/product'\n\ninterface OwnProps {\n  product: Product\n}\n\ninterface StateProps {\n  amount: number\n}\n\ninterface DispatchProps {\n  setOrderAmount: (amount: number) => UpdateOrderAction\n}\n\nconst mapState: MapStateToProps<StateProps, OwnProps, AppState> = (state, props) => ({\n  amount: state.order[props.product.id]?.amount || 0,\n})\n\nconst mapDispatch: MapDispatchToPropsFunction<DispatchProps, OwnProps> = (dispatch, props) => ({\n  setOrderAmount: amount => dispatch({ type: UPDATE_ORDER, product: props.product, amount })\n})\n\nconst OrderActions = ({ amount, setOrderAmount }: OwnProps & StateProps & DispatchProps) => {\n  const [value, setValue] = useState<string>()\n\n  if (amount === 0 && value === undefined)\n    return <Button size='mini' compact basic icon='add' onClick={() => setOrderAmount(1)} />\n\n  return <>\n    <Button size='mini' compact basic icon='plus' onClick={() => setOrderAmount(amount + 1)} />\n\n    <Input size='mini' type='number' value={value === undefined ? amount : value}\n      onChange={e => setValue(e.target.value)}\n      onBlur={() => {\n        if (value === undefined)\n          return\n\n        setOrderAmount(parseInt(value) || 0)\n\n        setValue(undefined)\n      }}\n    />\n\n    <Button size='mini' compact basic icon='minus' onClick={() => setOrderAmount(amount - 1)} />\n  </>\n}\n\nexport default connect(mapState, mapDispatch)(OrderActions)\n","import { CSSProperties } from 'react'\nimport { Label, Icon } from 'semantic-ui-react'\n\nimport useWindowSize from '../../hooks/use-window-size'\nimport Product from '../../models/product'\nimport OrderActions from './order-actions'\n\ninterface ProductRowProps {\n  style?: CSSProperties\n  product: Product\n  isLoggedIn: boolean\n}\n\nconst ProductRow = ({ style, product, isLoggedIn }: ProductRowProps) => {\n  const { width } = useWindowSize()\n\n  return (\n    <div className='list-item product' style={style}>\n      <div className=\"product-row-name\">{product.name}</div>\n\n      <div>{product.price} грн</div>\n\n      <div className='product-row-actions'>\n        {\n          product.count === 'Очікується'\n            ? <Label color='yellow'>{width > 600 ? 'Очікується' : <Icon name='clock' />}</Label>\n            : isLoggedIn\n              ? <OrderActions product={product} />\n              : <Label color='green'>{width > 600 ? 'В наявності' : <Icon name='check' />}</Label>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default ProductRow\n","import { memo, useEffect, useMemo, useState } from 'react'\nimport { FixedSizeList, areEqual } from 'react-window'\nimport { Segment } from 'semantic-ui-react'\n\nimport useWindowSize from '../../hooks/use-window-size'\nimport Category from '../../models/category'\nimport Product from '../../models/product'\nimport ListItem from '../../models/list-item'\nimport CategoryRow from './category-row'\nimport ProductRow from './product-row'\n\ninterface ProductsTableProps {\n  isLoggedIn: boolean\n  categories?: Category[]\n  filteredProducts?: Product[]\n}\n\ninterface MemoisedListProps {\n  height: number\n  windowWidth: number\n  isLoggedIn: boolean\n  items: ListItem[]\n}\n\nconst MemoisedList = memo(({ height, windowWidth, isLoggedIn, items }: MemoisedListProps) => (\n  <FixedSizeList\n    width='100%'\n    height={height}\n    itemCount={items.length}\n    itemSize={\n      (isLoggedIn && windowWidth <= 600)\n        || windowWidth <= 340\n        ? 84\n        : windowWidth <= 425\n          ? 71\n          : windowWidth <= 1024 ? 52 : 35\n    }\n    itemKey={index => items[index].value.key}\n    overscanCount={5}\n    className='products-border'\n  >\n    {memo(({ index, style }) => {\n      const item = items[index]\n\n      return item.type === 'category'\n        ? <CategoryRow style={style} category={item.value} />\n        : <ProductRow style={style} isLoggedIn={isLoggedIn} product={item.value} />\n    }, areEqual)}\n  </FixedSizeList>\n))\n\nconst ProductsTable = ({ isLoggedIn, categories, filteredProducts }: ProductsTableProps) => {\n  const windowSize = useWindowSize()\n\n  const [maxHeight, setMaxHeight] = useState<number>(windowSize.height)\n\n  useEffect(() => { if (windowSize.height > maxHeight) setMaxHeight(windowSize.height) }, [windowSize.height])\n\n  const items = useMemo(() => {\n    if (filteredProducts !== undefined) {\n      return filteredProducts.map(p => p.toItem())\n    }\n    else if (categories !== undefined) {\n      return categories.flatMap(c => {\n        const items = c.products.map(p => p.toItem())\n\n        return c.present() ? ([c.toItem()]).concat(items) : items\n      })\n    }\n    else {\n      return []\n    }\n  }, [categories, filteredProducts])\n\n  return (\n    <Segment basic attached className='products'>\n      <MemoisedList\n        height={maxHeight - (isLoggedIn ? 155 : 115) - (windowSize.width > 425 ? 14 : 0) - 20}\n        windowWidth={windowSize.width}\n        items={items}\n        isLoggedIn={isLoggedIn}\n      />\n    </Segment>\n  )\n}\n\nexport default ProductsTable\n","import { memo } from 'react'\nimport { Menu, Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nimport useWindowSize from '../../hooks/use-window-size'\nimport { auth } from '../../firebase-config'\n\ninterface MenuProps {\n  isLoggedIn: boolean\n  hasOrder: boolean\n}\n\nconst MenuComponent = ({ isLoggedIn, hasOrder }: MenuProps) => {\n  const { width } = useWindowSize()\n\n  if (!isLoggedIn)\n    return null\n\n  return (\n    <Menu secondary attached>\n      <Menu.Item onClick={() => auth.signOut()}>\n        <Icon name='sign out' />\n\n        Вийти\n      </Menu.Item>\n\n      <Menu.Menu className='right'>\n        {\n          hasOrder && <Menu.Item as={(props: any) => <Link to='/order' {...props} />}>\n            <Icon name='shop' />\n\n            {width > 600 ? 'Перейти до замовлення' : 'Замовлення'}\n          </Menu.Item>\n        }\n\n        <Menu.Item as={(props: any) => <Link to='/orders' {...props} />}>\n          <Icon name='history' />\n\n          {width > 600 ? 'Історія замовлень' : 'Історія'}\n        </Menu.Item>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nexport default memo(MenuComponent)\n","import { useEffect, useState } from 'react'\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { Segment } from 'semantic-ui-react'\nimport Fuse from 'fuse.js'\n\nimport { AppState, SetDataAction, SET_DATA } from '../../store'\nimport { auth } from '../../firebase-config'\nimport useSearch from '../../hooks/use-search'\nimport Category from '../../models/category'\nimport Product from '../../models/product'\nimport Order from '../../models/order'\nimport ProductsSearchInput from './products-search-input'\nimport ProductsTable from './products-table'\nimport Menu from './menu'\n\nasync function load(): Promise<Product[]> {\n  const response = await fetch('https://raw.githubusercontent.com/kivi-pu/products/master/products.xml')\n\n  const document = new DOMParser().parseFromString(await response.text(), 'text/xml')\n\n  return Array.from(document.getElementsByTagName('product')).map(e => new Product(e))\n}\n\nasync function getUpdatedAt(): Promise<Date> {\n  const response = await fetch('https://api.github.com/repos/kivi-pu/products/commits?per_page=1')\n\n  const json = await response.json()\n\n  return new Date(json[0].commit.author.date)\n}\n\ninterface StateProps {\n  order: Order\n  fuse?: Fuse<Product>\n  categories?: Category[]\n  updatedAt?: Date\n}\n\ninterface DispatchProps {\n  setData: (products: Product[], updatedAt: Date) => SetDataAction\n}\n\nconst mapState: MapStateToProps<StateProps, object, AppState> = state => state\n\nconst mapDispatch: MapDispatchToPropsFunction<DispatchProps, object> = dispatch => ({\n  setData: (products, updatedAt) => dispatch({ type: SET_DATA, products, updatedAt })\n})\n\nconst ProductsPage = ({ order, fuse, categories, updatedAt, setData }: StateProps & DispatchProps) => {\n  const [user, isFirebaseLoading] = useAuthState(auth)\n\n  const [isDataLoading, setIsDataLoading] = useState(false)\n\n  const [filteredProducts, runQuery] = useSearch<Product>(fuse)\n\n  useEffect(() => {\n    if (!categories || !fuse || !updatedAt) {\n      setIsDataLoading(true)\n\n      Promise.all([load(), getUpdatedAt()])\n        .then(([products, updatedAt]) => { setData(products, updatedAt); setIsDataLoading(false) })\n    }\n    // warning on setter functions missing from deps, that should be safe\n    // eslint-disable-next-line\n  }, [])\n\n  if (isDataLoading || isFirebaseLoading)\n    return <Segment basic attached loading />\n\n  return <>\n    <Menu isLoggedIn={!!user} hasOrder={Object.values(order).filter(x => x && x.amount > 0).length > 0} />\n\n    <Segment basic attached>\n      <ProductsSearchInput onSearch={runQuery} />\n    </Segment>\n\n    <Segment basic attached>\n      {updatedAt && <div className='updated-at-notice'>\n        Оновлено {updatedAt.toLocaleDateString()} о {updatedAt.toLocaleTimeString()}\n      </div>}\n\n      <div className='list-header'>\n        <div>Назва</div>\n\n        <div>Ціна</div>\n\n        <div>{user ? 'Замовлення' : 'Наявність'}</div>\n      </div>\n    </Segment>\n\n    <ProductsTable isLoggedIn={!!user} categories={categories} filteredProducts={filteredProducts} />\n  </>\n}\n\nexport default connect(mapState, mapDispatch)(ProductsPage)\n","import { useState, useCallback } from 'react'\nimport Fuse from 'fuse.js'\n\ntype runQuery = (query: string) => void\n\nexport default function useSearch<T>(fuse?: Fuse<T>): [T[] | undefined, runQuery] {\n  const [filtered, setFiltered] = useState<T[]>()\n\n  const runQuery: runQuery = query => setFiltered(query === '' ? undefined : fuse?.search(query)?.map(r => r.item))\n\n  return [filtered, useCallback(runQuery, [fuse])]\n}\n","import { Redirect } from 'react-router-dom'\nimport { Grid, Form, Segment, Message } from 'semantic-ui-react'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useState } from 'react'\nimport { auth } from '../../firebase-config'\n\nconst SignInPage = () => {\n  const [user, isFirebaseLoading] = useAuthState(auth)\n\n  const [email, setEmail] = useState('')\n\n  const [password, setPassword] = useState('')\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [error, setError] = useState<string>()\n\n  if (user)\n    return <Redirect to='/' />\n\n  const handleSignIn = async () => {\n    setIsLoading(true)\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password)\n\n      setError(undefined)\n    } catch (e) {\n      setError(e.message)\n    }\n\n    setIsLoading(false)\n  }\n\n  return (\n    <Grid className='sign-in-page' verticalAlign='middle' textAlign='center'>\n      <Grid.Column>\n        {error && <Message error content={error} />}\n\n        <Form onSubmit={handleSignIn} loading={isLoading || isFirebaseLoading}>\n          <Segment stacked>\n            <Form.Input type='email' placeholder='Адрес e-mail' icon='user' iconPosition='left' value={email} onChange={e => setEmail(e.target.value)} />\n\n            <Form.Input type='password' placeholder='Пароль' icon='lock' iconPosition='left' value={password} onChange={e => setPassword(e.target.value)} />\n\n            <Form.Button icon='sign in' content='Увійти' fluid />\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default SignInPage\n","import { Table, Button, Segment, Message } from 'semantic-ui-react'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux'\nimport { Redirect, Link, useHistory } from 'react-router-dom'\nimport { useState } from 'react'\n\nimport { auth, firestore } from '../../firebase-config'\nimport { AppState, ResetOrderAction, RESET_ORDER } from '../../store'\nimport ProductRow from '../products-page/product-row'\nimport { OrderItem } from '../../models/order'\n\ninterface StateProps {\n  items: OrderItem[]\n}\n\ninterface DispatchProps {\n  resetOrder: () => ResetOrderAction\n}\n\nconst mapState: MapStateToProps<StateProps, object, AppState> = state => ({\n  items: Object.values(state.order).filter(x => x && x.amount > 0).map(x => x!),\n})\n\nconst mapDispatch: MapDispatchToPropsFunction<DispatchProps, object> = dispatch => ({\n  resetOrder: () => dispatch({ type: RESET_ORDER })\n})\n\nconst OrderPage = ({ items, resetOrder }: StateProps & DispatchProps) => {\n  const [user, isFirebaseLoading] = useAuthState(auth)\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [error, setError] = useState<string>()\n\n  const history = useHistory()\n\n  if (!isFirebaseLoading && !user || items.length === 0)\n    return <Redirect to='/' />\n\n  const handleConfirmOrder = async () => {\n    setIsLoading(true)\n\n    try {\n      const products = items.map(({ product: { id, name }, amount }) => JSON.stringify({ id, name, amount }))\n\n      await firestore.collection('orders').add({ uid: user.uid, date: new Date(), products })\n\n      setError(undefined)\n\n      resetOrder()\n\n      history.push('/')\n    } catch (e) {\n      setError(e.message)\n    }\n\n    setIsLoading(false)\n  }\n\n  if (isLoading || isFirebaseLoading)\n    return <Segment basic attached loading />\n\n  return <>\n    {error && <Segment basic attached><Message error content={error} /></Segment>}\n\n    <Segment basic attached>\n      <div className='list-header'>\n        <div>Назва</div>\n\n        <div>Ціна</div>\n\n        <div>Замовлення</div>\n      </div>\n    </Segment>\n\n    <Segment basic attached className='order-products'>\n      <div>{items.map(({ product }) => <ProductRow key={product.id} product={product} isLoggedIn />)}</div>\n    </Segment>\n\n    <Segment basic attached className='order-buttons'>\n      <Button.Group fluid>\n        <Button basic negative icon='arrow left' content='Назад' as={(props: any) => <Link to='/' {...props} />} />\n\n        <Button basic positive icon='shop' content='Підтвердити замовлення' onClick={handleConfirmOrder} />\n      </Button.Group>\n    </Segment>\n  </>\n}\n\nexport default connect(mapState, mapDispatch)(OrderPage)\n","import { useEffect, useState, Fragment } from 'react'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { Redirect, Link } from 'react-router-dom'\nimport { Segment, Table, Menu, Icon, Message } from 'semantic-ui-react'\n\nimport { auth, firestore } from '../../firebase-config'\n\ninterface OrderRecord {\n  date: Date\n  products: { name: string, amount: number }[]\n}\n\nasync function load(uid: string): Promise<OrderRecord[]> {\n  const response = await firestore.collection('orders').where('uid', '==', uid).orderBy('date', 'desc').get()\n\n  return response.docs.map(x => ({\n    date: x.get('date').toDate(),\n    products: x.get('products').map((p: string) => JSON.parse(p))\n  }))\n}\n\nconst OrderHistoryPage = () => {\n  const [user, isFirebaseLoading] = useAuthState(auth)\n\n  const [records, setRecords] = useState<OrderRecord[]>([])\n\n  const [isLoading, setIsLoading] = useState(true)\n\n  const [error, setError] = useState<string>()\n\n  useEffect(() => {\n    if (!user) return\n\n    load(user.uid).then(records => {\n      setRecords(records)\n\n      setError(undefined)\n\n      setIsLoading(false)\n    }).catch(e => {\n      setError(e.message)\n\n      setIsLoading(false)\n    })\n    // warning on setter functions missing from deps, that should be safe\n    // eslint-disable-next-line\n  }, [user])\n\n  if (!isFirebaseLoading && !user)\n    return <Redirect to='/' />\n\n  return (\n    <>\n      <Menu secondary attached>\n        <Menu.Item as={(props: any) => <Link to='/' {...props} />}>\n          <Icon name='arrow left' />\n\n          Назад\n        </Menu.Item>\n      </Menu>\n\n      <Segment basic attached loading={isLoading || isFirebaseLoading}>\n        {error && <Message error content={error} />}\n\n        {records.length === 0\n          ? <Message info content='У вас ще немає замовлень' />\n          : <Table unstackable compact='very'>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Назва</Table.HeaderCell>\n\n                <Table.HeaderCell>Кількість</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            {records.map(({ date, products }, index) => <Fragment key={index}>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell colSpan={2}>{date.toString()}</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                {products.map(({ name, amount }, index) => <Table.Row key={index}>\n                  <Table.Cell>{name}</Table.Cell>\n\n                  <Table.Cell>{amount}</Table.Cell>\n                </Table.Row>\n                )}\n              </Table.Body>\n            </Fragment>\n            )}\n          </Table>\n        }\n      </Segment>\n    </>\n  )\n}\n\nexport default OrderHistoryPage\n","import 'react-app-polyfill/ie9'\nimport 'react-app-polyfill/stable'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport 'fomantic-ui-css/semantic.min.css'\n\nimport ProductsPage from './components/products-page'\nimport SignInPage from './components/sign-in-page'\nimport OrderPage from './components/order-page'\nimport OrderHistoryPage from './components/order-history-page'\nimport store from './store'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <Route exact path='/signin' component={SignInPage} />\n\n        <Route exact path='/order' component={OrderPage} />\n\n        <Route exact path='/orders' component={OrderHistoryPage} />\n\n        <Route exact path='/' component={ProductsPage} />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}