{"version":3,"sources":["firebase-config.ts","helpers.ts","models/category.tsx","store.ts","models/product.tsx","components/products-page/order-actions.tsx","components/products-page/product-rows.tsx","components/products-page/category-rows.tsx","components/products-page/products-search-input.tsx","components/products-page/products-table.tsx","hooks/use-search.ts","components/products-page/menu.tsx","components/products-page/index.tsx","components/sign-in-page/index.tsx","components/order-page/index.tsx","components/order-history-page/index.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","groupBy","arr","getKey","Object","entries","reduce","result","item","key","push","Category","name","products","names","this","split","length","UPDATE_ORDER","RESET_ORDER","SET_DATA","initialState","order","createStore","state","action","type","product","amount","id","fuse","Fuse","keys","categories","p","category","sort","a","b","localeCompare","map","devToolsEnhancer","getXMLTagContent","xml","tagName","elems","getElementsByTagName","textContent","Product","price","count","connect","props","dispatch","setOrderAmount","useState","value","setValue","undefined","Button","size","compact","basic","icon","onClick","Input","onChange","e","target","onBlur","parseInt","ProductRow","isLoggedIn","Table","Row","Cell","className","singleLine","Label","color","MemoizedProductRow","memo","prev","next","ProductRows","Body","CategoryHeader","Header","HeaderCell","colSpan","Breadcrumb","sections","content","CategoryRows","index","present","ProductsSearchInput","onSearch","query","setQuery","useEffect","timeout","setTimeout","clearTimeout","fluid","iconPosition","fetch","response","DOMParser","text","document","parseFromString","Array","from","setData","isFirebaseLoading","isLoading","setIsLoading","filtered","setFiltered","useCallback","search","r","useSearch","filteredProducts","runQuery","load","then","Segment","attached","loading","unstackable","MenuComponent","hasOrder","Menu","secondary","Item","signOut","Icon","as","to","useAuthState","user","values","filter","x","SignInPage","email","setEmail","password","setPassword","error","setError","handleSignIn","signInWithEmailAndPassword","message","Grid","verticalAlign","textAlign","Column","Message","Form","onSubmit","stacked","placeholder","items","resetOrder","history","useHistory","handleConfirmOrder","JSON","stringify","collection","add","uid","date","Date","Group","negative","positive","where","orderBy","get","docs","toDate","parse","OrderHistoryPage","records","setRecords","info","toString","ReactDOM","render","StrictMode","store","exact","path","component","OrderPage","ProductsPage","getElementById"],"mappings":"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","file":"static/js/main.17a5c6dc.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyAP3J-XdlTdcxSNxWqq-s_oFjDrKRQiZWo',\n  authDomain: 'kivi-pu.firebaseapp.com',\n  projectId: 'kivi-pu',\n  storageBucket: 'kivi-pu.appspot.com',\n  messagingSenderId: '548489968120',\n  appId: '1:548489968120:web:26993108b29017326bbe0d'\n})\n\nexport const auth = firebase.auth()\n\nexport const firestore = firebase.firestore()\n","export function groupBy<T>(arr: T[], getKey: (item: T) => string): [string, T[]][] {\n  return Object.entries(arr.reduce((result: { [key: string]: T[] }, item) => {\n    const key = getKey(item)\n\n    result[key] = result[key] || []\n\n    result[key].push(item)\n\n    return result\n  }, {}))\n}\n","import Product from './product'\n\nclass Category {\n  names: string[]\n  products: Product[]\n\n  constructor(name: string, products: Product[]) {\n    this.names = name.split('/')\n    this.products = products\n  }\n\n  present() {\n    return !(this.names.length === 1 && this.names[0] === '')\n  }\n}\n\nexport default Category\n","import { Action, createStore } from 'redux'\nimport { devToolsEnhancer } from 'redux-devtools-extension'\nimport Fuse from 'fuse.js'\n\nimport { groupBy } from './helpers'\nimport Order from './models/order'\nimport Product from './models/product'\nimport Category from './models/category'\n\nexport const UPDATE_ORDER = 'UPDATE_ORDER'\n\nexport interface UpdateOrderAction extends Action<typeof UPDATE_ORDER> {\n  product: Product\n  amount: number\n}\n\nexport const RESET_ORDER = 'RESET_ORDER'\n\nexport interface ResetOrderAction extends Action<typeof RESET_ORDER> {}\n\nexport const SET_DATA = 'SET_DATA'\n\nexport interface SetDataAction extends Action<typeof SET_DATA> {\n  products: Product[]\n}\n\ntype AppAction = UpdateOrderAction | ResetOrderAction | SetDataAction\n\nexport interface AppState {\n  order: Order\n  fuse?: Fuse<Product>\n  categories?: Category[]\n}\n\nconst initialState: AppState = {\n  order: {},\n}\n\nconst reducer = (state = initialState, action: AppAction) => {\n  switch (action.type) {\n    case UPDATE_ORDER:\n      const { product, amount } = action as UpdateOrderAction\n\n      return { ...state, order: { ...state.order, [product.id]: { product, amount } } }\n\n    case RESET_ORDER:\n      return { ...state, order: {} }\n\n    case SET_DATA:\n      const fuse = new Fuse(action.products, { keys: ['name'] })\n\n      const categories = groupBy(action.products, p => p.category)\n        .sort(([a], [b]) => a.localeCompare(b))\n        .map(([name, products]) => new Category(name, products))\n\n      return { ...state, fuse, categories }\n\n    default:\n      return state\n  }\n}\n\nexport default createStore(reducer, devToolsEnhancer({}))\n","function getXMLTagContent(xml: Element, tagName: string): string {\n  const elems = xml.getElementsByTagName(tagName)\n\n  return (elems.length >= 1 && elems[0].textContent) || ''\n}\n\nclass Product {\n  id: string\n  name: string\n  price: string\n  count: string\n  category: string\n\n  constructor(xml: Element) {\n    this.id = getXMLTagContent(xml, 'code')\n    this.name = getXMLTagContent(xml, 'name')\n    this.price = getXMLTagContent(xml, 'price')\n    this.count = getXMLTagContent(xml, 'count')\n    this.category = getXMLTagContent(xml, 'category')\n  }\n}\n\nexport default Product\n","import { useState } from 'react'\nimport { Button, Input } from 'semantic-ui-react'\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux'\n\nimport { AppState, UpdateOrderAction, UPDATE_ORDER } from '../../store'\nimport Product from '../../models/product'\n\ninterface OwnProps {\n  product: Product\n}\n\ninterface StateProps {\n  amount: number\n}\n\ninterface DispatchProps {\n  setOrderAmount: (amount: number) => UpdateOrderAction\n}\n\nconst mapState: MapStateToProps<StateProps, OwnProps, AppState> = (state, props) => ({\n  amount: state.order[props.product.id]?.amount || 0,\n})\n\nconst mapDispatch: MapDispatchToPropsFunction<DispatchProps, OwnProps> = (dispatch, props) => ({\n  setOrderAmount: amount => dispatch({ type: UPDATE_ORDER, product: props.product, amount })\n})\n\nconst OrderActions = ({ amount, setOrderAmount }: OwnProps & StateProps & DispatchProps) => {\n  const [value, setValue] = useState<string>()\n\n  if (amount === 0 && value === undefined)\n    return <Button size='mini' compact basic icon='add' onClick={() => setOrderAmount(1)} />\n\n  return <>\n    <Button size='mini' compact basic icon='plus' onClick={() => setOrderAmount(amount + 1)} />\n\n    <Input size='mini' value={value === undefined ? amount : value}\n      onChange={e => setValue(e.target.value)}\n      onBlur={() => {\n        if (value === undefined)\n          return\n\n        setOrderAmount(parseInt(value) || 0)\n\n        setValue(undefined)\n      }}\n    />\n\n    <Button size='mini' compact basic icon='minus' onClick={() => setOrderAmount(amount - 1)} />\n  </>\n}\n\nexport default connect(mapState, mapDispatch)(OrderActions)\n","import { memo } from 'react'\nimport { Table, Label } from 'semantic-ui-react'\nimport Product from '../../models/product'\nimport OrderActions from './order-actions'\n\ninterface ProductRowsProps {\n  products: Product[]\n  isLoggedIn: boolean\n}\n\ninterface ProductRowProps {\n  product: Product\n  isLoggedIn: boolean\n}\n\nconst ProductRow = ({ product, isLoggedIn }: ProductRowProps) => (\n  <Table.Row>\n    <Table.Cell className=\"product-row-name\">{product.name}</Table.Cell>\n\n    <Table.Cell singleLine>{product.price} грн</Table.Cell>\n\n    <Table.Cell singleLine className='product-row-actions'>\n      {\n        product.count === 'Очікується'\n          ? <Label color='yellow'>Очікується</Label>\n          : isLoggedIn\n            ? <OrderActions product={product} />\n            : <Label color='green'>В наявності</Label>\n      }\n    </Table.Cell>\n  </Table.Row>\n)\n\nconst MemoizedProductRow = memo(ProductRow, (prev, next) => {\n  return prev.isLoggedIn === next.isLoggedIn && prev.product.id === next.product.id\n})\n\nconst ProductRows = ({ products, isLoggedIn }: ProductRowsProps) => <>\n  <Table.Body>\n    {products.map(p => <MemoizedProductRow key={p.id} product={p} isLoggedIn={isLoggedIn} />)}\n  </Table.Body>\n</>\n\n\nexport default ProductRows\n","import { Fragment } from 'react'\nimport { Breadcrumb, Table } from 'semantic-ui-react'\nimport Category from '../../models/category'\nimport ProductRows from './product-rows'\n\ninterface CategoryRowsProps {\n  categories: Category[]\n  isLoggedIn: boolean\n}\n\ninterface CategoryHeaderProps {\n  names: string[]\n}\n\nconst CategoryRows = ({ categories, isLoggedIn }: CategoryRowsProps) => <>\n  {categories.map((category, index) => (\n    <Fragment key={index}>\n      {category.present() && <CategoryHeader names={category.names} />}\n\n      <ProductRows products={category.products} isLoggedIn={isLoggedIn} />\n    </Fragment>\n  ))}\n</>\n\nconst CategoryHeader = ({ names }: CategoryHeaderProps) => <Table.Header>\n  <Table.Row>\n    <Table.HeaderCell colSpan={3}>\n      <Breadcrumb icon='right angle' sections={names.map(name => ({ key: name, content: name }))} />\n    </Table.HeaderCell>\n  </Table.Row>\n</Table.Header>\n\nexport default CategoryRows\n","import { useState, useEffect, memo } from 'react'\nimport { Input, Button } from 'semantic-ui-react'\n\ninterface ProductsSearchInputProps {\n  onSearch: (query: string) => void\n}\n\nconst ProductsSearchInput = ({ onSearch }: ProductsSearchInputProps) => {\n  const [query, setQuery] = useState<string>('')\n\n  useEffect(() => {\n    if (query === '') {\n      onSearch(query)\n    } else {\n      const timeout = setTimeout(() => onSearch(query), 500)\n\n      return () => clearTimeout(timeout)\n    }\n  }, [query])\n\n  return (\n    <Input\n      fluid\n      icon='search'\n      iconPosition='left'\n      value={query}\n      onChange={e => setQuery(e.target.value)}\n      action={<Button basic icon='delete' onClick={() => setQuery('')} />}\n    />\n  )\n}\n\nexport default memo(ProductsSearchInput)\n","import { useEffect, useState } from 'react'\nimport { Segment, Table } from 'semantic-ui-react'\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux'\nimport Fuse from 'fuse.js'\n\nimport { AppState, SetDataAction, SET_DATA } from '../../store'\nimport useSearch from '../../hooks/use-search'\nimport Category from '../../models/category'\nimport Product from '../../models/product'\nimport CategoryRows from './category-rows'\nimport ProductRows from './product-rows'\nimport ProductsSearchInput from './products-search-input'\n\nasync function load(): Promise<Product[]> {\n  const response = await fetch('https://raw.githubusercontent.com/kivi-pu/products/master/products.xml')\n\n  const document = new DOMParser().parseFromString(await response.text(), 'text/xml')\n\n  return Array.from(document.getElementsByTagName('product')).map(e => new Product(e))\n}\n\ninterface OwnProps {\n  isFirebaseLoading: boolean\n  isLoggedIn: boolean\n}\n\ninterface StateProps {\n  fuse?: Fuse<Product>\n  categories?: Category[]\n}\n\ninterface DispatchProps {\n  setData: (products: Product[]) => SetDataAction\n}\n\nconst mapState: MapStateToProps<StateProps, OwnProps, AppState> = state => state\n\nconst mapDispatch: MapDispatchToPropsFunction<DispatchProps, OwnProps> = dispatch => ({\n  setData: products => dispatch({ type: SET_DATA, products })\n})\n\nconst ProductsTable = (\n  {\n    isFirebaseLoading,\n    isLoggedIn,\n    fuse,\n    categories,\n    setData\n  }: OwnProps & StateProps & DispatchProps\n) => {\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [filteredProducts, runQuery] = useSearch<Product>(fuse)\n\n  useEffect(() => {\n    if (!categories || !fuse) {\n      setIsLoading(true)\n\n      load().then(products => { setData(products); setIsLoading(false) })\n    }\n    // warning on setter functions missing from deps, that should be safe\n    // eslint-disable-next-line\n  }, [])\n\n  if (isLoading || isFirebaseLoading)\n    return <Segment basic attached loading className='products-table-segment' />\n\n  return (\n    <Segment basic attached className='products-table-segment'>\n      <ProductsSearchInput onSearch={runQuery} />\n\n      <Table unstackable compact='very'>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Назва</Table.HeaderCell>\n\n            <Table.HeaderCell>Ціна</Table.HeaderCell>\n\n            <Table.HeaderCell>{isLoggedIn ? 'Замовлення' : 'Наявність'}</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        {\n          filteredProducts === undefined\n            ? categories && <CategoryRows categories={categories} isLoggedIn={isLoggedIn} />\n            : <ProductRows products={filteredProducts} isLoggedIn={isLoggedIn} />\n        }\n      </Table>\n    </Segment>\n  )\n}\n\nexport default connect(mapState, mapDispatch)(ProductsTable)\n","import { useState, useCallback } from 'react'\nimport Fuse from 'fuse.js'\n\ntype runQuery = (query: string) => void\n\nexport default function useSearch<T>(fuse?: Fuse<T>): [T[] | undefined, runQuery] {\n  const [filtered, setFiltered] = useState<T[]>()\n\n  const runQuery: runQuery = query => setFiltered(query === '' ? undefined : fuse?.search(query)?.map(r => r.item))\n\n  return [filtered, useCallback(runQuery, [fuse])]\n}\n","import { memo } from 'react'\nimport { Menu, Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nimport { auth } from '../../firebase-config'\n\ninterface MenuProps {\n  isLoggedIn: boolean\n  hasOrder: boolean\n}\n\nconst MenuComponent = ({ isLoggedIn, hasOrder } : MenuProps) => {\n  if (!isLoggedIn)\n    return null\n\n  return (\n    <Menu secondary attached>\n      <Menu.Item onClick={() => auth.signOut()}>\n        <Icon name='sign out' />\n\n        Вийти\n      </Menu.Item>\n\n      <Menu.Menu className='right'>\n        {\n          hasOrder && <Menu.Item as={(props: any) => <Link to='/order' {...props} />}>\n            <Icon name='shop' />\n\n            Перейти до замовлення\n          </Menu.Item>\n        }\n\n        <Menu.Item as={(props: any) => <Link to='/orders' {...props} />}>\n          <Icon name='history' />\n\n          Історія замовлень\n        </Menu.Item>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nexport default memo(MenuComponent)\n","import { Table } from 'semantic-ui-react'\nimport { connect, MapStateToProps } from 'react-redux'\nimport { useAuthState } from 'react-firebase-hooks/auth'\n\nimport { auth } from '../../firebase-config'\nimport { AppState } from '../../store'\nimport Order from '../../models/order'\nimport ProductsTable from './products-table'\nimport Menu from './menu'\n\ninterface StateProps {\n  order: Order\n}\n\nconst mapState: MapStateToProps<StateProps, object, AppState> = state => ({\n  order: state.order,\n})\n\nconst ProductsPage = ({ order }: StateProps) => {\n  const [user, isLoading] = useAuthState(auth)\n\n  return <>\n    <Menu isLoggedIn={!!user} hasOrder={Object.values(order).filter(x => x && x.amount > 0).length > 0} />\n\n    <ProductsTable isFirebaseLoading={isLoading} isLoggedIn={!!user} />\n  </>\n}\n\nexport default connect(mapState)(ProductsPage)\n","import { Redirect } from 'react-router-dom'\nimport { Grid, Form, Segment, Message } from 'semantic-ui-react'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useState } from 'react'\nimport { auth } from '../../firebase-config'\n\nconst SignInPage = () => {\n  const [user, isFirebaseLoading] = useAuthState(auth)\n\n  const [email, setEmail] = useState('')\n\n  const [password, setPassword] = useState('')\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [error, setError] = useState<string>()\n\n  if (user)\n    return <Redirect to='/' />\n\n  const handleSignIn = async () => {\n    setIsLoading(true)\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password)\n\n      setError(undefined)\n    } catch (e) {\n      setError(e.message)\n    }\n\n    setIsLoading(false)\n  }\n\n  return (\n    <Grid className='sign-in-page' verticalAlign='middle' textAlign='center'>\n      <Grid.Column>\n        {error && <Message error content={error} />}\n\n        <Form onSubmit={handleSignIn} loading={isLoading || isFirebaseLoading}>\n          <Segment stacked>\n            <Form.Input type='email' placeholder='Адрес e-mail' icon='user' iconPosition='left' value={email} onChange={e => setEmail(e.target.value)} />\n\n            <Form.Input type='password' placeholder='Пароль' icon='lock' iconPosition='left' value={password} onChange={e => setPassword(e.target.value)} />\n\n            <Form.Button icon='sign in' content='Увійти' fluid />\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default SignInPage\n","import { Table, Button, Segment, Message } from 'semantic-ui-react'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux'\nimport { Redirect, Link, useHistory } from 'react-router-dom'\nimport { useState } from 'react'\n\nimport { auth, firestore } from '../../firebase-config'\nimport { AppState, ResetOrderAction, RESET_ORDER } from '../../store'\nimport ProductRows from '../products-page/product-rows'\nimport { OrderItem } from '../../models/order'\n\ninterface StateProps {\n  items: OrderItem[]\n}\n\ninterface DispatchProps {\n  resetOrder: () => ResetOrderAction\n}\n\nconst mapState: MapStateToProps<StateProps, object, AppState> = state => ({\n  items: Object.values(state.order).filter(x => x && x.amount > 0).map(x => x!),\n})\n\nconst mapDispatch: MapDispatchToPropsFunction<DispatchProps, object> = dispatch => ({\n  resetOrder: () => dispatch({ type: RESET_ORDER })\n})\n\nconst OrderPage = ({ items, resetOrder }: StateProps & DispatchProps) => {\n  const [user, isFirebaseLoading] = useAuthState(auth)\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [error, setError] = useState<string>()\n\n  const history = useHistory()\n\n  if (!isFirebaseLoading && !user || items.length === 0)\n    return <Redirect to='/' />\n\n  const handleConfirmOrder = async () => {\n    setIsLoading(true)\n\n    try {\n      const products = items.map(({ product: { id, name }, amount }) => JSON.stringify({ id, name, amount }))\n\n      await firestore.collection('orders').add({ uid: user.uid, date: new Date(), products })\n\n      setError(undefined)\n\n      resetOrder()\n\n      history.push('/')\n    } catch (e) {\n      setError(e.message)\n    }\n\n    setIsLoading(false)\n  }\n\n  return (\n    <Segment basic loading={isLoading || isFirebaseLoading}>\n      {error && <Message error content={error} />}\n\n      <Table unstackable compact='very'>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Назва</Table.HeaderCell>\n\n            <Table.HeaderCell>Ціна</Table.HeaderCell>\n\n            <Table.HeaderCell>Замовлення</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <ProductRows products={items.map(x => x.product)} isLoggedIn />\n      </Table>\n\n      <Button.Group fluid>\n        <Button basic negative icon='arrow left' content='Назад' as={(props: any) => <Link to='/' {...props} />} />\n\n        <Button basic positive icon='shop' content='Підтвердити замовлення' onClick={handleConfirmOrder} />\n      </Button.Group>\n    </Segment>\n  )\n}\n\nexport default connect(mapState, mapDispatch)(OrderPage)\n","import { useEffect, useState, Fragment } from 'react'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { Redirect, Link } from 'react-router-dom'\nimport { Segment, Table, Menu, Icon, Message } from 'semantic-ui-react'\n\nimport { auth, firestore } from '../../firebase-config'\n\ninterface OrderRecord {\n  date: Date\n  products: { name: string, amount: number }[]\n}\n\nasync function load(uid: string): Promise<OrderRecord[]> {\n  const response = await firestore.collection('orders').where('uid', '==', uid).orderBy('date', 'desc').get()\n\n  return response.docs.map(x => ({\n    date: x.get('date').toDate(),\n    products: x.get('products').map((p: string) => JSON.parse(p))\n  }))\n}\n\nconst OrderHistoryPage = () => {\n  const [user, isFirebaseLoading] = useAuthState(auth)\n\n  const [records, setRecords] = useState<OrderRecord[]>([])\n\n  const [isLoading, setIsLoading] = useState(true)\n\n  const [error, setError] = useState<string>()\n\n  useEffect(() => {\n    if (!user) return\n\n    load(user.uid).then(records => {\n      setRecords(records)\n\n      setError(undefined)\n\n      setIsLoading(false)\n    }).catch(e => {\n      setError(e.message)\n\n      setIsLoading(false)\n    })\n    // warning on setter functions missing from deps, that should be safe\n    // eslint-disable-next-line\n  }, [user])\n\n  if (!isFirebaseLoading && !user)\n    return <Redirect to='/' />\n\n  return (\n    <>\n      <Menu secondary attached>\n        <Menu.Item as={(props: any) => <Link to='/' {...props} />}>\n          <Icon name='arrow left' />\n\n          Назад\n        </Menu.Item>\n      </Menu>\n\n      <Segment basic attached loading={isLoading || isFirebaseLoading}>\n        {error && <Message error content={error} />}\n\n        {records.length === 0\n          ? <Message info content='У вас ще немає замовлень' />\n          : <Table unstackable compact='very'>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Назва</Table.HeaderCell>\n\n                <Table.HeaderCell>Кількість</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            {records.map(({ date, products }, index) => <Fragment key={index}>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell colSpan={2}>{date.toString()}</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                {products.map(({ name, amount }, index) => <Table.Row key={index}>\n                  <Table.Cell>{name}</Table.Cell>\n\n                  <Table.Cell>{amount}</Table.Cell>\n                </Table.Row>\n                )}\n              </Table.Body>\n            </Fragment>\n            )}\n          </Table>\n        }\n      </Segment>\n    </>\n  )\n}\n\nexport default OrderHistoryPage\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport 'fomantic-ui-css/semantic.min.css'\n\nimport ProductsPage from './components/products-page'\nimport SignInPage from './components/sign-in-page'\nimport OrderPage from './components/order-page'\nimport OrderHistoryPage from './components/order-history-page'\nimport store from './store'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <Route exact path='/signin' component={SignInPage} />\n\n        <Route exact path='/order' component={OrderPage} />\n\n        <Route exact path='/orders' component={OrderHistoryPage} />\n\n        <Route exact path='/' component={ProductsPage} />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}