{"version":3,"sources":["firebase-config.ts","models/category.tsx","models/product.tsx","store.ts","components/products-page/order-actions.tsx","components/products-page/product-rows.tsx","components/products-page/category-rows.tsx","components/products-page/products-search-input.tsx","components/products-page/products-table.tsx","hooks/use-search.ts","helpers.ts","components/products-page/menu.tsx","components/products-page/index.tsx","components/sign-in-page/index.tsx","components/order-page/index.tsx","components/order-history-page/index.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","Category","name","products","names","this","split","length","getXMLTagContent","xml","tagName","elems","getElementsByTagName","textContent","Product","id","price","count","category","UPDATE_ORDER","RESET_ORDER","initialState","order","createStore","state","action","type","product","amount","devToolsEnhancer","connect","props","dispatch","setOrderAmount","useState","value","setValue","undefined","Button","size","compact","basic","icon","onClick","Input","onChange","e","target","onBlur","parseInt","ProductRow","isLoggedIn","Table","Row","Cell","className","singleLine","Label","color","MemoizedProductRow","memo","prev","next","ProductRows","Body","map","p","CategoryHeader","Header","HeaderCell","colSpan","Breadcrumb","sections","key","content","CategoryRows","categories","index","present","ProductsSearchInput","onSearch","query","setQuery","useEffect","timeout","setTimeout","clearTimeout","fluid","iconPosition","a","fetch","response","DOMParser","text","document","parseFromString","Array","from","ProductsTable","header","isFirebaseLoading","isLoading","setIsLoading","setCategories","filtered","setFiltered","fuse","setFuse","items","options","Fuse","useCallback","search","r","item","useSearch","filteredProducts","setProducts","runQuery","load","then","arr","getKey","Object","entries","reduce","result","push","sort","b","localeCompare","keys","Segment","attached","loading","unstackable","MenuComponent","hasOrder","Menu","secondary","Item","signOut","Icon","as","to","useAuthState","user","values","filter","x","SignInPage","email","setEmail","password","setPassword","error","setError","handleSignIn","signInWithEmailAndPassword","message","Grid","verticalAlign","textAlign","Column","Message","Form","onSubmit","stacked","placeholder","resetOrder","history","useHistory","handleConfirmOrder","JSON","stringify","collection","add","uid","date","Date","Group","negative","positive","where","orderBy","get","docs","toDate","parse","OrderHistoryPage","records","setRecords","info","toString","ReactDOM","render","StrictMode","store","exact","path","component","OrderPage","ProductsPage","getElementById"],"mappings":"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","file":"static/js/main.5a2d5c6c.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyAP3J-XdlTdcxSNxWqq-s_oFjDrKRQiZWo',\n  authDomain: 'kivi-pu.firebaseapp.com',\n  projectId: 'kivi-pu',\n  storageBucket: 'kivi-pu.appspot.com',\n  messagingSenderId: '548489968120',\n  appId: '1:548489968120:web:26993108b29017326bbe0d'\n})\n\nexport const auth = firebase.auth()\n\nexport const firestore = firebase.firestore()\n","import Product from './product'\n\nclass Category {\n  names: string[]\n  products: Product[]\n\n  constructor(name: string, products: Product[]) {\n    this.names = name.split('/')\n    this.products = products\n  }\n\n  present() {\n    return !(this.names.length === 1 && this.names[0] === '')\n  }\n}\n\nexport default Category\n","function getXMLTagContent(xml: Element, tagName: string): string {\n  const elems = xml.getElementsByTagName(tagName)\n\n  return (elems.length >= 1 && elems[0].textContent) || ''\n}\n\nclass Product {\n  id: string\n  name: string\n  price: string\n  count: string\n  category: string\n\n  constructor(xml: Element) {\n    this.id = getXMLTagContent(xml, 'code')\n    this.name = getXMLTagContent(xml, 'name')\n    this.price = getXMLTagContent(xml, 'price')\n    this.count = getXMLTagContent(xml, 'count')\n    this.category = getXMLTagContent(xml, 'category')\n  }\n}\n\nexport default Product\n","import { Action, createStore } from 'redux'\nimport { devToolsEnhancer } from 'redux-devtools-extension'\nimport Order from './models/order'\nimport Product from './models/product'\n\nexport const UPDATE_ORDER = 'UPDATE_ORDER'\n\nexport interface UpdateOrderAction extends Action<typeof UPDATE_ORDER> {\n  product: Product\n  amount: number\n}\n\nexport const RESET_ORDER = 'RESET_ORDER'\n\nexport interface ResetOrderAction extends Action<typeof RESET_ORDER> {}\n\ntype AppAction = UpdateOrderAction | ResetOrderAction\n\nexport interface AppState {\n  order: Order\n}\n\nconst initialState: AppState = {\n  order: {},\n}\n\nconst reducer = (state = initialState, action: AppAction) => {\n  switch (action.type) {\n    case UPDATE_ORDER:\n      const { product, amount } = action as UpdateOrderAction\n\n      return { ...state, order: { ...state.order, [product.id]: { product, amount } } }\n\n    case RESET_ORDER:\n      return { ...state, order: {} }\n\n    default:\n      return state\n  }\n}\n\nexport default createStore(reducer, devToolsEnhancer({}))\n","import { useState } from 'react'\nimport { Button, Input } from 'semantic-ui-react'\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux'\n\nimport { AppState, UpdateOrderAction, UPDATE_ORDER } from '../../store'\nimport Product from '../../models/product'\n\ninterface OwnProps {\n  product: Product\n}\n\ninterface StateProps {\n  amount: number\n}\n\ninterface DispatchProps {\n  setOrderAmount: (amount: number) => UpdateOrderAction\n}\n\nconst mapState: MapStateToProps<StateProps, OwnProps, AppState> = (state, props) => ({\n  amount: state.order[props.product.id]?.amount || 0,\n})\n\nconst mapDispatch: MapDispatchToPropsFunction<DispatchProps, OwnProps> = (dispatch, props) => ({\n  setOrderAmount: amount => dispatch({ type: UPDATE_ORDER, product: props.product, amount })\n})\n\nconst OrderActions = ({ amount, setOrderAmount }: OwnProps & StateProps & DispatchProps) => {\n  const [value, setValue] = useState<string>()\n\n  if (amount === 0 && value === undefined)\n    return <Button size='mini' compact basic icon='add' onClick={() => setOrderAmount(1)} />\n\n  return <>\n    <Button size='mini' compact basic icon='plus' onClick={() => setOrderAmount(amount + 1)} />\n\n    <Input size='mini' value={value === undefined ? amount : value}\n      onChange={e => setValue(e.target.value)}\n      onBlur={() => {\n        if (value === undefined)\n          return\n\n        setOrderAmount(parseInt(value) || 0)\n\n        setValue(undefined)\n      }}\n    />\n\n    <Button size='mini' compact basic icon='minus' onClick={() => setOrderAmount(amount - 1)} />\n  </>\n}\n\nexport default connect(mapState, mapDispatch)(OrderActions)\n","import { memo } from 'react'\nimport { Table, Label } from 'semantic-ui-react'\nimport Product from '../../models/product'\nimport OrderActions from './order-actions'\n\ninterface ProductRowsProps {\n  products: Product[]\n  isLoggedIn: boolean\n}\n\ninterface ProductRowProps {\n  product: Product\n  isLoggedIn: boolean\n}\n\nconst ProductRow = ({ product, isLoggedIn }: ProductRowProps) => (\n  <Table.Row>\n    <Table.Cell className=\"product-row-name\">{product.name}</Table.Cell>\n\n    <Table.Cell singleLine>{product.price} грн</Table.Cell>\n\n    <Table.Cell singleLine className='product-row-actions'>\n      {\n        product.count === 'Очікується'\n          ? <Label color='yellow'>Очікується</Label>\n          : isLoggedIn\n            ? <OrderActions product={product} />\n            : <Label color='green'>В наявності</Label>\n      }\n    </Table.Cell>\n  </Table.Row>\n)\n\nconst MemoizedProductRow = memo(ProductRow, (prev, next) => {\n  return prev.isLoggedIn === next.isLoggedIn && prev.product.id === next.product.id\n})\n\nconst ProductRows = ({ products, isLoggedIn }: ProductRowsProps) => <>\n  <Table.Body>\n    {products.map(p => <MemoizedProductRow key={p.id} product={p} isLoggedIn={isLoggedIn} />)}\n  </Table.Body>\n</>\n\n\nexport default ProductRows\n","import { Fragment } from 'react'\nimport { Breadcrumb, Table } from 'semantic-ui-react'\nimport Category from '../../models/category'\nimport ProductRows from './product-rows'\n\ninterface CategoryRowsProps {\n  categories: Category[]\n  isLoggedIn: boolean\n}\n\ninterface CategoryHeaderProps {\n  names: string[]\n}\n\nconst CategoryRows = ({ categories, isLoggedIn }: CategoryRowsProps) => <>\n  {categories.map((category, index) => (\n    <Fragment key={index}>\n      {category.present() && <CategoryHeader names={category.names} />}\n\n      <ProductRows products={category.products} isLoggedIn={isLoggedIn} />\n    </Fragment>\n  ))}\n</>\n\nconst CategoryHeader = ({ names }: CategoryHeaderProps) => <Table.Header>\n  <Table.Row>\n    <Table.HeaderCell colSpan={3}>\n      <Breadcrumb icon='right angle' sections={names.map(name => ({ key: name, content: name }))} />\n    </Table.HeaderCell>\n  </Table.Row>\n</Table.Header>\n\nexport default CategoryRows\n","import { useState, useEffect, memo } from 'react'\nimport { Input, Button } from 'semantic-ui-react'\n\ninterface ProductsSearchInputProps {\n  onSearch: (query: string) => void\n}\n\nconst ProductsSearchInput = ({ onSearch }: ProductsSearchInputProps) => {\n  const [query, setQuery] = useState<string>('')\n\n  useEffect(() => {\n    if (query === '') {\n      onSearch(query)\n    } else {\n      const timeout = setTimeout(() => onSearch(query), 500)\n\n      return () => clearTimeout(timeout)\n    }\n  }, [query])\n\n  return (\n    <Input\n      fluid\n      icon='search'\n      iconPosition='left'\n      value={query}\n      onChange={e => setQuery(e.target.value)}\n      action={<Button basic icon='delete' onClick={() => setQuery('')} />}\n    />\n  )\n}\n\nexport default memo(ProductsSearchInput)\n","import { useEffect, useState } from 'react'\nimport { Segment, Table } from 'semantic-ui-react'\n\nimport { groupBy } from '../../helpers'\nimport useSearch from '../../hooks/use-search'\nimport Category from '../../models/category'\nimport Product from '../../models/product'\nimport CategoryRows from './category-rows'\nimport ProductRows from './product-rows'\nimport ProductsSearchInput from './products-search-input'\n\nasync function load(): Promise<Product[]> {\n  const response = await fetch('https://raw.githubusercontent.com/kivi-pu/products/master/products.xml')\n\n  const document = new DOMParser().parseFromString(await response.text(), 'text/xml')\n\n  return Array.from(document.getElementsByTagName('product')).map(e => new Product(e))\n}\n\ninterface ProductsTableProps {\n  header: JSX.Element\n  isFirebaseLoading: boolean\n  isLoggedIn: boolean\n}\n\nconst ProductsTable = ({ header, isFirebaseLoading, isLoggedIn }: ProductsTableProps) => {\n  const [isLoading, setIsLoading] = useState(true)\n\n  const [categories, setCategories] = useState<Category[]>()\n\n  const [filteredProducts, setProducts, runQuery] = useSearch<Product>()\n\n  useEffect(() => {\n    load().then(products => {\n      const categories = groupBy(products, p => p.category)\n        .sort(([a], [b]) => a.localeCompare(b))\n        .map(([name, products]) => new Category(name, products))\n\n      setCategories(categories)\n\n      setProducts(products.sort((a, b) => a.name.localeCompare(b.name)), { keys: ['name'] })\n\n      setIsLoading(false)\n    })\n    // warning on setter functions missing from deps, that should be safe\n    // eslint-disable-next-line\n  }, [])\n\n  if (isLoading || isFirebaseLoading)\n    return <Segment basic attached loading className='products-table-segment' />\n\n  return (\n    <Segment basic attached className='products-table-segment'>\n      <ProductsSearchInput onSearch={runQuery} />\n\n      <Table unstackable compact='very'>\n        <Table.Header>\n          <Table.Row>\n            {header}\n          </Table.Row>\n        </Table.Header>\n\n        {\n          filteredProducts === undefined\n            ? categories && <CategoryRows categories={categories} isLoggedIn={isLoggedIn} />\n            : <ProductRows products={filteredProducts} isLoggedIn={isLoggedIn} />\n        }\n      </Table>\n    </Segment>\n  )\n}\n\nexport default ProductsTable\n","import { useState, useCallback } from 'react'\nimport Fuse from 'fuse.js'\n\ntype setData<T> = (items: T[], options?: Fuse.IFuseOptions<T> | undefined) => void\n\ntype runQuery = (query: string) => void\n\nexport default function useSearch<T>(): [T[] | undefined, setData<T>, runQuery] {\n  const [filtered, setFiltered] = useState<T[]>()\n\n  const [fuse, setFuse] = useState<Fuse<T>>()\n\n  const setData: setData<T> = (items, options) => {\n    setFuse(new Fuse(items, options))\n\n    setFiltered(undefined)\n  }\n\n  const runQuery: runQuery = query => setFiltered(query === '' ? undefined : fuse?.search(query)?.map(r => r.item))\n\n  return [filtered, setData, useCallback(runQuery, [fuse])]\n}\n","export function groupBy<T>(arr: T[], getKey: (item: T) => string): [string, T[]][] {\n  return Object.entries(arr.reduce((result: { [key: string]: T[] }, item) => {\n    const key = getKey(item)\n\n    result[key] = result[key] || []\n\n    result[key].push(item)\n\n    return result\n  }, {}))\n}\n","import { memo } from 'react'\nimport { Menu, Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nimport { auth } from '../../firebase-config'\n\ninterface MenuProps {\n  isLoggedIn: boolean\n  hasOrder: boolean\n}\n\nconst MenuComponent = ({ isLoggedIn, hasOrder } : MenuProps) => {\n  if (!isLoggedIn)\n    return null\n\n  return (\n    <Menu secondary attached>\n      <Menu.Item onClick={() => auth.signOut()}>\n        <Icon name='sign out' />\n\n        Вийти\n      </Menu.Item>\n\n      <Menu.Menu className='right'>\n        {\n          hasOrder && <Menu.Item as={(props: any) => <Link to='/order' {...props} />}>\n            <Icon name='shop' />\n\n            Перейти до замовлення\n          </Menu.Item>\n        }\n\n        <Menu.Item as={(props: any) => <Link to='/orders' {...props} />}>\n          <Icon name='history' />\n\n          Історія замовлень\n        </Menu.Item>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nexport default memo(MenuComponent)\n","import { Table } from 'semantic-ui-react'\nimport { connect, MapStateToProps } from 'react-redux'\nimport { useAuthState } from 'react-firebase-hooks/auth'\n\nimport { auth } from '../../firebase-config'\nimport { AppState } from '../../store'\nimport Order from '../../models/order'\nimport ProductsTable from './products-table'\nimport Menu from './menu'\n\ninterface StateProps {\n  order: Order\n}\n\nconst mapState: MapStateToProps<StateProps, object, AppState> = state => ({\n  order: state.order,\n})\n\nconst ProductsPage = ({ order }: StateProps) => {\n  const [user, isLoading] = useAuthState(auth)\n\n  const header = <>\n    <Table.HeaderCell>Назва</Table.HeaderCell>\n\n    <Table.HeaderCell>Ціна</Table.HeaderCell>\n\n    <Table.HeaderCell>{user ? 'Замовлення' : 'Наявність'}</Table.HeaderCell>\n  </>\n\n  return <>\n    <Menu isLoggedIn={!!user} hasOrder={Object.values(order).filter(x => x && x.amount > 0).length > 0} />\n\n    <ProductsTable header={header} isFirebaseLoading={isLoading} isLoggedIn={!!user} />\n  </>\n}\n\nexport default connect(mapState)(ProductsPage)\n","import { Redirect } from 'react-router-dom'\nimport { Grid, Form, Segment, Message } from 'semantic-ui-react'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useState } from 'react'\nimport { auth } from '../../firebase-config'\n\nconst SignInPage = () => {\n  const [user, isFirebaseLoading] = useAuthState(auth)\n\n  const [email, setEmail] = useState('')\n\n  const [password, setPassword] = useState('')\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [error, setError] = useState<string>()\n\n  if (user)\n    return <Redirect to='/' />\n\n  const handleSignIn = async () => {\n    setIsLoading(true)\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password)\n\n      setError(undefined)\n    } catch (e) {\n      setError(e.message)\n    }\n\n    setIsLoading(false)\n  }\n\n  return (\n    <Grid className='sign-in-page' verticalAlign='middle' textAlign='center'>\n      <Grid.Column>\n        {error && <Message error content={error} />}\n\n        <Form onSubmit={handleSignIn} loading={isLoading || isFirebaseLoading}>\n          <Segment stacked>\n            <Form.Input type='email' placeholder='Адрес e-mail' icon='user' iconPosition='left' value={email} onChange={e => setEmail(e.target.value)} />\n\n            <Form.Input type='password' placeholder='Пароль' icon='lock' iconPosition='left' value={password} onChange={e => setPassword(e.target.value)} />\n\n            <Form.Button icon='sign in' content='Увійти' fluid />\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default SignInPage\n","import { Table, Button, Segment, Message } from 'semantic-ui-react'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux'\nimport { Redirect, Link, useHistory } from 'react-router-dom'\nimport { useState } from 'react'\n\nimport { auth, firestore } from '../../firebase-config'\nimport { AppState, ResetOrderAction, RESET_ORDER } from '../../store'\nimport ProductRows from '../products-page/product-rows'\nimport { OrderItem } from '../../models/order'\n\ninterface StateProps {\n  items: OrderItem[]\n}\n\ninterface DispatchProps {\n  resetOrder: () => ResetOrderAction\n}\n\nconst mapState: MapStateToProps<StateProps, object, AppState> = state => ({\n  items: Object.values(state.order).filter(x => x && x.amount > 0).map(x => x!),\n})\n\nconst mapDispatch: MapDispatchToPropsFunction<DispatchProps, object> = dispatch => ({\n  resetOrder: () => dispatch({ type: RESET_ORDER })\n})\n\nconst OrderPage = ({ items, resetOrder }: StateProps & DispatchProps) => {\n  const [user, isFirebaseLoading] = useAuthState(auth)\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [error, setError] = useState<string>()\n\n  const history = useHistory()\n\n  if (!isFirebaseLoading && !user || items.length === 0)\n    return <Redirect to='/' />\n\n  const handleConfirmOrder = async () => {\n    setIsLoading(true)\n\n    try {\n      const products = items.map(({ product: { id, name }, amount }) => JSON.stringify({ id, name, amount }))\n\n      await firestore.collection('orders').add({ uid: user.uid, date: new Date(), products })\n\n      setError(undefined)\n\n      resetOrder()\n\n      history.push('/')\n    } catch (e) {\n      setError(e.message)\n    }\n\n    setIsLoading(false)\n  }\n\n  return (\n    <Segment basic loading={isLoading || isFirebaseLoading}>\n      {error && <Message error content={error} />}\n\n      <Table unstackable compact='very'>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Назва</Table.HeaderCell>\n\n            <Table.HeaderCell>Ціна</Table.HeaderCell>\n\n            <Table.HeaderCell>Замовлення</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <ProductRows products={items.map(x => x.product)} isLoggedIn />\n      </Table>\n\n      <Button.Group fluid>\n        <Button basic negative icon='arrow left' content='Назад' as={(props: any) => <Link to='/' {...props} />} />\n\n        <Button basic positive icon='shop' content='Підтвердити замовлення' onClick={handleConfirmOrder} />\n      </Button.Group>\n    </Segment>\n  )\n}\n\nexport default connect(mapState, mapDispatch)(OrderPage)\n","import { useEffect, useState, Fragment } from 'react'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { Redirect, Link } from 'react-router-dom'\nimport { Segment, Table, Menu, Icon, Message } from 'semantic-ui-react'\n\nimport { auth, firestore } from '../../firebase-config'\n\ninterface OrderRecord {\n  date: Date\n  products: { name: string, amount: number }[]\n}\n\nasync function load(uid: string): Promise<OrderRecord[]> {\n  const response = await firestore.collection('orders').where('uid', '==', uid).orderBy('date', 'desc').get()\n\n  return response.docs.map(x => ({\n    date: x.get('date').toDate(),\n    products: x.get('products').map((p: string) => JSON.parse(p))\n  }))\n}\n\nconst OrderHistoryPage = () => {\n  const [user, isFirebaseLoading] = useAuthState(auth)\n\n  const [records, setRecords] = useState<OrderRecord[]>([])\n\n  const [isLoading, setIsLoading] = useState(true)\n\n  const [error, setError] = useState<string>()\n\n  useEffect(() => {\n    if (!user) return\n\n    load(user.uid).then(records => {\n      setRecords(records)\n\n      setError(undefined)\n\n      setIsLoading(false)\n    }).catch(e => {\n      setError(e.message)\n\n      setIsLoading(false)\n    })\n    // warning on setter functions missing from deps, that should be safe\n    // eslint-disable-next-line\n  }, [user])\n\n  if (!isFirebaseLoading && !user)\n    return <Redirect to='/' />\n\n  return (\n    <>\n      <Menu secondary attached>\n        <Menu.Item as={(props: any) => <Link to='/' {...props} />}>\n          <Icon name='arrow left' />\n\n          Назад\n        </Menu.Item>\n      </Menu>\n\n      <Segment basic attached loading={isLoading || isFirebaseLoading}>\n        {error && <Message error content={error} />}\n\n        {records.length === 0\n          ? <Message info content='У вас ще немає замовлень' />\n          : <Table unstackable compact='very'>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Назва</Table.HeaderCell>\n\n                <Table.HeaderCell>Кількість</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            {records.map(({ date, products }, index) => <Fragment key={index}>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell colSpan={2}>{date.toString()}</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                {products.map(({ name, amount }, index) => <Table.Row key={index}>\n                  <Table.Cell>{name}</Table.Cell>\n\n                  <Table.Cell>{amount}</Table.Cell>\n                </Table.Row>\n                )}\n              </Table.Body>\n            </Fragment>\n            )}\n          </Table>\n        }\n      </Segment>\n    </>\n  )\n}\n\nexport default OrderHistoryPage\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport 'fomantic-ui-css/semantic.min.css'\n\nimport ProductsPage from './components/products-page'\nimport SignInPage from './components/sign-in-page'\nimport OrderPage from './components/order-page'\nimport OrderHistoryPage from './components/order-history-page'\nimport store from './store'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <Route exact path='/signin' component={SignInPage} />\n\n        <Route exact path='/order' component={OrderPage} />\n\n        <Route exact path='/orders' component={OrderHistoryPage} />\n\n        <Route exact path='/' component={ProductsPage} />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}