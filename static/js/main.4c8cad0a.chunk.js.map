{"version":3,"sources":["hooks/use-search.ts","models/product.tsx","models/category.tsx","components/products-page/product-rows.tsx","components/products-page/category-rows.tsx","components/products-page/products-table.tsx","store.ts","components/products-page/order-actions.tsx","components/products-page/index.tsx","index.tsx"],"names":["useSearch","useState","query","setQuery","filtered","setFiltered","fuse","setFuse","items","options","Fuse","undefined","search","map","r","item","getXMLTagContent","xml","tagName","elems","getElementsByTagName","length","textContent","Product","id","name","price","count","this","Category","names","products","getAttribute","split","Array","from","e","ProductRows","ProductRow","Table","Body","product","index","Row","CategoryHeader","Header","HeaderCell","colSpan","Breadcrumb","icon","sections","key","content","CategoryRows","categories","a","fetch","response","DOMParser","text","document","parseFromString","ProductsTable","header","setCategories","filteredProducts","setProducts","useEffect","load","then","c","flat","keys","Segment","basic","Input","fluid","iconPosition","value","onChange","target","action","Button","onClick","unstackable","compact","Cell","UPDATE_ORDER","initialState","order","user","createStore","state","type","amount","devToolsEnhancer","connect","props","dispatch","setOrderAmount","console","log","setValue","size","onBlur","parseInt","singleLine","className","Label","color","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.4c8cad0a.chunk.js","sourcesContent":["import { useState } from 'react'\nimport Fuse from 'fuse.js'\n\ntype setter<T> = (items: T[], options?: Fuse.IFuseOptions<T> | undefined) => void\n\ntype runQuery = (query: string) => void\n\nfunction useSearch<T>(): [T[] | undefined, setter<T>, string, runQuery] {\n  const [query, setQuery] = useState<string>('')\n\n  const [filtered, setFiltered] = useState<T[]>()\n\n  const [fuse, setFuse] = useState<Fuse<T>>()\n\n  const setter: setter<T> = (items, options) => {\n    setFuse(new Fuse(items, options))\n\n    setFiltered(undefined)\n  }\n\n  const runQuery: runQuery = (query: string) => {\n    setQuery(query)\n\n    setFiltered(query === '' ? undefined : fuse?.search(query)?.map(r => r.item))\n  }\n\n  return [filtered, setter, query, runQuery]\n}\n\nexport default useSearch\n","function getXMLTagContent(xml: Element, tagName: string): string {\n  const elems = xml.getElementsByTagName(tagName)\n\n  return (elems.length >= 1 && elems[0].textContent) || ''\n}\n\nclass Product {\n  id: string\n  name: string\n  price: string\n  count: string\n\n  constructor(xml: Element) {\n    this.id = getXMLTagContent(xml, 'code')\n    this.name = getXMLTagContent(xml, 'name')\n    this.price = getXMLTagContent(xml, 'price')\n    this.count = getXMLTagContent(xml, 'count')\n  }\n}\n\nexport default Product\n","import Product from './product'\n\nclass Category {\n  names: string[] | undefined\n  products: Product[]\n\n  constructor(xml: Element) {\n    this.names = xml.getAttribute('name')?.split('/')\n    this.products = Array.from(xml.getElementsByTagName('product')).map(e => new Product(e))\n  }\n}\n\nexport default Category\n","import { Table } from 'semantic-ui-react'\nimport Product from '../../models/product'\n\nexport type ProductRowElement = ({ product }: { product: Product }) => JSX.Element\n\ninterface ProductRowsProps {\n  products: Product[]\n  ProductRow: ProductRowElement\n}\n\nconst ProductRows = ({ products, ProductRow }: ProductRowsProps) => (\n  <Table.Body>\n    {products.map((product, index) => (\n      <Table.Row key={index}>\n        <ProductRow product={product} />\n      </Table.Row>\n    ))}\n  </Table.Body>\n)\n\n\nexport default ProductRows\n","import { Fragment } from 'react'\nimport { Breadcrumb, Table } from 'semantic-ui-react'\nimport Category from '../../models/category'\nimport ProductRows, { ProductRowElement } from './product-rows'\n\ninterface CategoryRowsProps {\n  categories: Category[]\n  ProductRow: ProductRowElement\n}\n\ninterface CategoryHeaderProps {\n  names: string[]\n}\n\nconst CategoryRows = ({ categories, ProductRow }: CategoryRowsProps) => <>\n  {categories.map(({ names, products }, index) => (\n    <Fragment key={index}>\n      {names && <CategoryHeader names={names} />}\n\n      <ProductRows products={products} ProductRow={ProductRow} />\n    </Fragment>\n  ))}\n</>\n\nconst CategoryHeader = ({ names }: CategoryHeaderProps) => <Table.Header>\n  <Table.Row>\n    <Table.HeaderCell colSpan={3}>\n      <Breadcrumb icon='right angle' sections={names.map(name => ({ key: name, content: name }))} />\n    </Table.HeaderCell>\n  </Table.Row>\n</Table.Header>\n\nexport default CategoryRows\n","import { useEffect, useState } from 'react'\nimport { Segment, Table, Input, Button } from 'semantic-ui-react'\n\nimport useSearch from '../../hooks/use-search'\nimport Category from '../../models/category'\nimport Product from '../../models/product'\nimport CategoryRows from './category-rows'\nimport ProductRows, { ProductRowElement } from './product-rows'\n\nasync function load(): Promise<Category[]> {\n  const response = await fetch('https://raw.githubusercontent.com/kivi-pu/products/master/products.xml')\n\n  const document = new DOMParser().parseFromString(await response.text(), 'text/xml')\n\n  return Array.from(document.getElementsByTagName('category')).map(e => new Category(e))\n}\n\ninterface ProductsTableProps {\n  header: JSX.Element\n  ProductRow: ProductRowElement\n}\n\nconst ProductsTable = ({ header, ProductRow }: ProductsTableProps) => {\n  const [categories, setCategories] = useState<Category[]>()\n\n  const [filteredProducts, setProducts, query, setQuery] = useSearch<Product>()\n\n  useEffect(() => {\n    load().then(categories => {\n      setCategories(categories)\n\n      setProducts(categories.map(c => c.products).flat(), { keys: ['name'] })\n    })\n    // warning on setter functions missing from deps, that should be safe\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <Segment basic>\n      <Input fluid icon='search' iconPosition='left' value={query} onChange={e => setQuery(e.target.value)}\n        action={<Button basic icon='delete' onClick={() => setQuery('')} />} />\n\n      <Table unstackable compact='very'>\n        <Table.Header>\n          <Table.Row>\n            {header}\n          </Table.Row>\n        </Table.Header>\n\n        {\n          filteredProducts === undefined\n            ? categories && <CategoryRows categories={categories} ProductRow={ProductRow} />\n            : <ProductRows products={filteredProducts} ProductRow={ProductRow} />\n        }\n      </Table>\n    </Segment>\n  )\n}\n\nexport default ProductsTable\n\nexport const { HeaderCell, Row, Cell } = Table\n","import { Action, createStore } from 'redux'\nimport { devToolsEnhancer } from 'redux-devtools-extension'\nimport Order from './models/order'\nimport Product from './models/product'\nimport User from './models/user'\n\nexport const UPDATE_ORDER = 'PRODUCTS_PAGE/UPDATE_ORDER'\n\nexport interface UpdateOrderAction extends Action<typeof UPDATE_ORDER> {\n  product: Product\n  amount: number\n}\n\ntype AppAction = UpdateOrderAction\n\nexport interface AppState {\n  order: Order\n  user: User | undefined\n}\n\nconst initialState: AppState = {\n  order: {},\n  user: undefined\n}\n\nconst reducer = (state = initialState, action: AppAction) => {\n  switch (action.type) {\n    case UPDATE_ORDER:\n      const { product, amount } = action\n\n      return { ...state, order: { ...state.order, [product.id]: { product, amount } } }\n\n    default:\n      return state\n  }\n}\n\nexport default createStore(reducer, devToolsEnhancer({}))\n","import { useState } from 'react'\nimport { Button, Input } from 'semantic-ui-react'\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux'\n\nimport { AppState, UpdateOrderAction, UPDATE_ORDER } from '../../store'\nimport Product from '../../models/product'\n\ninterface OwnProps {\n  product: Product\n}\n\ninterface StateProps {\n  amount: number\n}\n\ninterface DispatchProps {\n  setOrderAmount: (amount: number) => UpdateOrderAction\n}\n\nconst mapState: MapStateToProps<StateProps, OwnProps, AppState> = (state, props) => ({\n  amount: state.order[props.product.id]?.amount || 0,\n})\n\nconst mapDispatch: MapDispatchToPropsFunction<DispatchProps, OwnProps> = (dispatch, props) => ({\n  setOrderAmount: amount => dispatch({ type: UPDATE_ORDER, product: props.product, amount })\n})\n\nconst OrderActions = ({ amount, setOrderAmount }: OwnProps & StateProps & DispatchProps) => {\n  console.log('render OrderActions', amount)\n\n  const [value, setValue] = useState<string>()\n\n  if (amount === 0 && value === undefined)\n    return <Button size='mini' compact basic icon='add' onClick={() => setOrderAmount(1)} />\n\n  return <>\n    <Button size='mini' compact basic icon='plus' onClick={() => setOrderAmount(amount + 1)} />\n\n    <Input size='mini' value={value === undefined ? amount : value}\n      onChange={e => { console.log('change'); setValue(e.target.value) }}\n      onBlur={() => {\n        if (value === undefined)\n          return\n\n        setOrderAmount(parseInt(value) || 0)\n\n        setValue(undefined)\n      }}\n    />\n\n    <Button size='mini' compact basic icon='minus' onClick={() => setOrderAmount(amount - 1)} />\n  </>\n}\n\nexport default connect(mapState, mapDispatch)(OrderActions)\n","import { Table, Label } from 'semantic-ui-react'\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux'\n\nimport { ProductRowElement } from './product-rows'\nimport ProductsTable from './products-table'\nimport OrderActions from './order-actions'\nimport User from '../../models/user'\nimport { AppState } from '../../store'\n\ninterface StateProps {\n  user: User | undefined\n}\n\nconst mapState: MapStateToProps<StateProps, object, AppState> = state => ({\n  user: state.user,\n})\n\nconst ProductsPage = ({ user }: StateProps) => {\n  const ProductRow: ProductRowElement = ({ product }) => <>\n    <Table.Cell>{product.name}</Table.Cell>\n\n    <Table.Cell singleLine>{product.price} грн</Table.Cell>\n\n    <Table.Cell singleLine className='product-row-actions'>\n      {\n        product.count === 'Очікується'\n          ? <Label color='yellow'>Очікується</Label>\n          : user\n            ? <OrderActions product={product} />\n            : <Label color='green'>В наявності</Label>\n      }\n    </Table.Cell>\n  </>\n\n  const header = <>\n    <Table.HeaderCell>Назва</Table.HeaderCell>\n\n    <Table.HeaderCell>Ціна</Table.HeaderCell>\n\n    <Table.HeaderCell>{user ? 'Замовлення' : 'Наявність'}</Table.HeaderCell>\n  </>\n\n  return <ProductsTable header={header} ProductRow={ProductRow} />\n}\n\nexport default connect(mapState)(ProductsPage)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport 'fomantic-ui-css/semantic.min.css'\n\nimport ProductsPage from './components/products-page'\nimport store from './store'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ProductsPage />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}