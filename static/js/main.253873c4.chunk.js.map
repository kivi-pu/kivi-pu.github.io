{"version":3,"sources":["products-list.js","index.js"],"names":["extractProperty","xml","name","elems","getElementsByTagName","length","textContent","undefined","a","fetch","response","DOMParser","text","document","parseFromString","Array","from","map","product","price","ProductsList","useState","collection","fuse","products","setProducts","query","setQuery","useEffect","loadProducts","then","p","Fuse","keys","productResults","search","r","item","formatter","Intl","NumberFormat","Segment","basic","Input","fluid","icon","onChange","e","target","value","Table","unstackable","Header","Row","HeaderCell","Body","index","Cell","format","ReactDOM","render","StrictMode","getElementById"],"mappings":"oOAIA,SAASA,EAAgBC,EAAKC,GAC5B,IAAMC,EAAQF,EAAIG,qBAAqBF,GAEvC,OAAOC,EAAME,QAAU,EAAIF,EAAM,GAAGG,iBAAcC,E,4CAGpD,8BAAAC,EAAA,sEACyBC,MAAM,gBAD/B,cACQC,EADR,YAGmB,IAAIC,UAHvB,SAGyDD,EAASE,OAHlE,0BAGQC,EAHR,KAGmCC,gBAHnC,eAG0E,YAH1E,kBAKSC,MAAMC,KAAKH,EAAST,qBAAqB,YAAYa,KAAI,SAAAC,GAAO,MAAK,CAC1EhB,KAAMF,EAAgBkB,EAAS,QAC/BC,MAAOnB,EAAgBkB,EAAS,cAPpC,4C,sBAmDeE,MAxCf,WAAyB,IAAD,EACUC,mBAAS,CAAEC,WAAY,GAAIC,KAAM,OAD3C,mBACfC,EADe,KACLC,EADK,OAGIJ,qBAHJ,mBAGfK,EAHe,KAGRC,EAHQ,KAKtBC,qBAAU,kB,0CAAMC,GAAeC,MAAK,SAAAC,GAAC,OAAIN,EAAY,CAAEH,WAAYS,EAAGR,KAAM,IAAIS,IAAKD,EAAG,CAAEE,KAAM,CAAC,iBAAgB,IAEjH,IAAMC,EAAkBV,EAASD,MAAQG,EAASF,EAASD,KAAKY,OAAOT,GAAOT,KAAI,SAAAmB,GAAC,OAAIA,EAAEC,QAAQb,EAASF,WAEpGgB,EAAY,IAAIC,KAAKC,aAE3B,OACE,eAACC,EAAA,EAAD,CAASC,OAAK,EAAd,UACE,cAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,SAAU,SAAAC,GAAC,OAAIpB,EAASoB,EAAEC,OAAOC,UAE5D,eAACC,EAAA,EAAD,CAAOC,aAAW,EAAlB,UACE,cAACD,EAAA,EAAME,OAAP,UACE,eAACF,EAAA,EAAMG,IAAP,WACE,cAACH,EAAA,EAAMI,WAAP,6CAEA,cAACJ,EAAA,EAAMI,WAAP,4CAIJ,cAACJ,EAAA,EAAMK,KAAP,UAEIrB,GAAkBA,EAAejB,KAAI,WAAkBuC,GAAlB,IAAGtD,EAAH,EAAGA,KAAMiB,EAAT,EAASA,MAAT,OACnC,eAAC+B,EAAA,EAAMG,IAAP,WACE,cAACH,EAAA,EAAMO,KAAP,UAAavD,IAEb,eAACgD,EAAA,EAAMO,KAAP,WAAanB,EAAUoB,OAAOvC,GAA9B,2BAHcqC,eC1C9BG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhD,SAASiD,eAAe,W","file":"static/js/main.253873c4.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Input, Table, Segment } from 'semantic-ui-react'\nimport Fuse from 'fuse.js'\n\nfunction extractProperty(xml, name) {\n  const elems = xml.getElementsByTagName(name)\n\n  return elems.length >= 1 ? elems[0].textContent : undefined\n}\n\nasync function loadProducts() {\n  const response = await fetch('products.xml')\n\n  const document = new DOMParser().parseFromString(await response.text(), 'text/xml')\n\n  return Array.from(document.getElementsByTagName('product')).map(product => ({\n    name: extractProperty(product, 'name'),\n    price: extractProperty(product, 'price'),\n  }))\n}\n\nfunction ProductsList() {\n  const [products, setProducts] = useState({ collection: [], fuse: null })\n\n  const [query, setQuery] = useState()\n\n  useEffect(() => loadProducts().then(p => setProducts({ collection: p, fuse: new Fuse(p, { keys: ['name'] }) })), [])\n\n  const productResults = (products.fuse && query) ? products.fuse.search(query).map(r => r.item) : products.collection\n\n  const formatter = new Intl.NumberFormat()\n\n  return (\n    <Segment basic>\n      <Input fluid icon='search' onChange={e => setQuery(e.target.value)} />\n\n      <Table unstackable>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Назва</Table.HeaderCell>\n\n            <Table.HeaderCell>Ціна</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {\n            productResults && productResults.map(({ name, price }, index) => (\n              <Table.Row key={index}>\n                <Table.Cell>{name}</Table.Cell>\n\n                <Table.Cell>{formatter.format(price)} грн</Table.Cell>\n              </Table.Row>\n            ))\n          }\n        </Table.Body>\n      </Table >\n    </Segment>\n  )\n}\n\nexport default ProductsList\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'fomantic-ui-css/semantic.min.css'\n\nimport ProductsList from './products-list'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ProductsList />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}